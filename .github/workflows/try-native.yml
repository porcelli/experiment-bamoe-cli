name: try-native

on:
  push:
    branches: [ main ]

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'temurin'
  GRAAL_VERSION: '22.3.0'

jobs:
  # Build native executable per runner
  build:
    name: 'Build with Graal on ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v3
        
      - name: 'Add Developer Command Prompt for Microsoft Visual C++ '
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAAL_VERSION }}
          java-version: ${{ env.JAVA_VERSION }}
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Cache Maven packages'
        uses: actions/cache@v3.3.1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Build Native Image (Linux)'
        if: ${{ runner.os == 'Linux' }}
        run: ./mvnw -ntp -B --file pom.xml -Pnative package

      - name: 'Build Native Image (macOS, Windows)'
        if: ${{ runner.os == 'macOS' || runner.os == 'Windows' }}
        run: ./mvnw -ntp -B --file pom.xml -Pnative package "-Dquarkus.test.profile.tags=basic"

      - name: 'Create distribution'
        run: ./mvnw -ntp -B --file pom.xml -Pdist package -DskipTests

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            target/*.zip
            target/*.tar.gz